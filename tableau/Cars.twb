<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cars' inline='true' name='federated.0t3l6cx13e4vjp143e4pn1o8n9fg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cars' name='semistructpassivestore-direct.03ofukh1be1w4f1gm8tbo0x3j300'>
            <connection class='semistructpassivestore-direct' directory='/Users/steph/Documents/WPI/21Spring/CS573/a2' filename='cars.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[cars.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.03ofukh1be1w4f1gm8tbo0x3j300' name='cars.json' table='[cars.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.03ofukh1be1w4f1gm8tbo0x3j300' name='cars.json' table='[cars.json]' type='table' />
        <cols>
          <map key='[Acceleration]' value='[cars.json].[Acceleration]' />
          <map key='[Car]' value='[cars.json].[Car]' />
          <map key='[Cylinders]' value='[cars.json].[Cylinders]' />
          <map key='[Displacement]' value='[cars.json].[Displacement]' />
          <map key='[Document Index (generated)]' value='[cars.json].[Document Index (generated)]' />
          <map key='[Horsepower]' value='[cars.json].[Horsepower]' />
          <map key='[MPG]' value='[cars.json].[MPG]' />
          <map key='[Manufacturer]' value='[cars.json].[Manufacturer]' />
          <map key='[Model.Year]' value='[cars.json].[&quot;Model.Year&quot;]' />
          <map key='[Number]' value='[cars.json].[Number]' />
          <map key='[Origin]' value='[cars.json].[Origin]' />
          <map key='[Weight]' value='[cars.json].[Weight]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Acceleration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Acceleration]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Acceleration</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Car</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Car]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Car</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cylinders</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cylinders]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Cylinders</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Displacement</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Displacement]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Displacement</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Horsepower</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Horsepower]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Horsepower</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MPG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MPG]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>MPG</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manufacturer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Manufacturer]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Manufacturer</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Model.Year&quot;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Model.Year]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>&quot;Model.Year&quot;</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Number</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Origin</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[cars.json]</parent-name>
            <remote-alias>Weight</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cars.json_4D9335782A894033A2C19ACADC8F47AC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' hidden='true' name='[Acceleration]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Acceleration</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Car]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Car</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[Cylinders]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Cylinders</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[Displacement]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Displacement</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' hidden='true' name='[Horsepower]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Horsepower</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[MPG]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>MPG</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Manufacturer]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Manufacturer</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='real' hidden='true' name='[Model.Year]' role='dimension' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Model.Year</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='real' name='[Number]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Number</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Origin]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Origin</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[Weight]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Weight</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cars.json' datatype='table' name='[__tableau_internal_object_id__].[cars.json_4D9335782A894033A2C19ACADC8F47AC]' role='measure' type='quantitative' />
      <column-instance column='[Manufacturer]' derivation='Attribute' name='[attr:Manufacturer:nk]' pivot='key' type='nominal' />
      <column-instance column='[MPG]' derivation='Sum' name='[sum:MPG:qk]' pivot='key' type='quantitative' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='Cars' role='dimensions'>
        <folder-item name='[Car]' type='field' />
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[Manufacturer]' type='field' />
        <folder-item name='[Model.Year]' type='field' />
        <folder-item name='[Number]' type='field' />
        <folder-item name='[Origin]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Cars'>
          <folder-item name='[Car]' type='field' />
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[Manufacturer]' type='field' />
          <folder-item name='[Model.Year]' type='field' />
          <folder-item name='[Number]' type='field' />
          <folder-item name='[Origin]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Manufacturer:nk]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;bmw&quot;</bucket>
            </map>
            <map to='#0000ff'>
              <bucket>&quot;ford&quot;</bucket>
            </map>
            <map to='#800080'>
              <bucket>&quot;mercedes&quot;</bucket>
            </map>
            <map to='#dc9a09'>
              <bucket>&quot;toyota&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;honda&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Manufacturer:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#000000'>
              <multibucket>
                <bucket>&quot;bmw&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#000000'>
              <multibucket>
                <bucket>&quot;bmw&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:MPG:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#0000ff'>
              <multibucket>
                <bucket>&quot;ford&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#0000ff'>
              <multibucket>
                <bucket>&quot;ford&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:MPG:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#800080'>
              <multibucket>
                <bucket>&quot;mercedes&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#800080'>
              <multibucket>
                <bucket>&quot;mercedes&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:MPG:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dc9a09'>
              <multibucket>
                <bucket>&quot;toyota&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#dc9a09'>
              <multibucket>
                <bucket>&quot;toyota&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:MPG:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff0000'>
              <multibucket>
                <bucket>&quot;honda&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff0000'>
              <multibucket>
                <bucket>&quot;honda&quot;</bucket>
                <bucket>&quot;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:MPG:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cars.json' id='cars.json_4D9335782A894033A2C19ACADC8F47AC'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.03ofukh1be1w4f1gm8tbo0x3j300' name='cars.json' table='[cars.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='cars' name='federated.0t3l6cx13e4vjp143e4pn1o8n9fg' />
          </datasources>
          <datasource-dependencies datasource='federated.0t3l6cx13e4vjp143e4pn1o8n9fg'>
            <column datatype='string' name='[Car]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Car</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Cylinders]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Cylinders</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[MPG]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>MPG</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Manufacturer]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Manufacturer</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Weight]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Weight</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Manufacturer]' derivation='Attribute' name='[attr:Manufacturer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Car]' derivation='None' name='[none:Car:nk]' pivot='key' type='nominal' />
            <column-instance column='[MPG]' derivation='None' name='[none:MPG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weight]' derivation='None' name='[none:Weight:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cylinders]' derivation='Sum' name='[sum:Cylinders:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MPG]' derivation='Sum' name='[sum:MPG:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:Weight:qk]' field-type='quantitative' major-origin='2000.0' major-spacing='1000.0' minor-origin='0.0' minor-spacing='500.0' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:MPG:qk]' field-type='quantitative' major-origin='0.0' major-spacing='10.0' minor-origin='0.0' minor-spacing='5.0' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:MPG:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-spacing='10.0' minor-origin='0.0' minor-spacing='5.0' scope='rows' synchronized='true' type='space' />
            <format attr='tick-color' value='#000000' />
            <format attr='display' class='0' field='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:MPG:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:MPG:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='cols' value='#ffffff' />
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:Weight:qk]' value='n0;-0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:Cylinders:qk]' field-type='quantitative' max='4.0' max-size='1' min='2.0' min-size='0' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#edeef0' />
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:Cylinders:qk]' value='Weight/1000&#10;'>
              <formatted-text>
                <run>Weight/1000&#10;</run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[attr:Manufacturer:nk]&#10;[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[:Measure Names]' value='Manufacturer' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[attr:Manufacturer:nk]' />
              <size column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:Cylinders:qk]' />
              <lod column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:Car:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='129' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[attr:Manufacturer:nk]' />
              <size column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:Cylinders:qk]' />
              <lod column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:Car:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='circle' />
                <format attr='size' value='1.1314364671707153' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='52' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:MPG:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[attr:Manufacturer:nk]' />
              <size column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:Cylinders:qk]' />
              <lod column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:Car:nk]' />
              <color column='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.76962840557098389' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:MPG:qk] + [federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:MPG:qk])</rows>
        <cols>[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:Weight:qk]</cols>
      </table>
      <simple-id uuid='{925BDE00-8CAD-4594-807F-586D62C9854B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='213'>
            <card pane-specification-id='1' param='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[attr:Manufacturer:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[sum:Cylinders:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[:Measure Names]</field>
            <field>[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:Car:nk]</field>
            <field>[federated.0t3l6cx13e4vjp143e4pn1o8n9fg].[none:MPG:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{558E618F-3102-4EC0-A182-4F8E49C7F0E4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      w6Pmelwui0mTJo2a6wFoa2sDGDXX5PF4yMqacFauZ0QFgJN9+9vfjnUTxFe48cYbY90E0YeE
      hAQeeeSRWDdD9CE3N5cf//jHZ+V7yyKwEEKMUSNqDWAsCAQCxMXFjZopoNEoEAgQHx8f62aI
      0wiHwwC4eiuCK3qQACCEEGOUTAEJIcQYZa1fv359rBsxFti2zcsvv8wTTzzBu+++y8yZM0lO
      TmbPnj2sX7+ed955h5kzZ5KamkptbS0PP/wwr776KuPHjycnJ4f6+np++ctfsnnzZtLT05ky
      ZUqsL2nUCQQCbNiwgaeeeora2lpmz56NaZrs2LGDn//853z00UfMmTOHhIQEysvL+dnPfsY/
      //lPCgoKyMzMpKKigoceeogtW7aQl5fH+PHjY31Jo5LjODzzzDO0tbWRn59PW1sbjz32GC+8
      8ALx8fHk5+dj2zYbN27kt7/9LQ0NDcyaNQulFM899xxPPvlktH9Hy06hgZIngCHywQcf8MQT
      T3DLLbeQmZnJunXrCAaD3HjjjXzzm98kPz+f2267jXA4zD333IPX6+V73/set956K/X19dx/
      //2YpskVV1zB7bffzrFjx2J9SaPOX/7yF1588UVuvvlmNm/ezGuvvUZNTQ233HIL1113HaZp
      cv/999PZ2cnNN9/MnDlzuPDCC/nRj35ES0sLa9euZcaMGSxbtowbbrgBn88X60sald577z3u
      vfdeysvLUUrx+OOPU11dzQ9/+EN+8pOfUFpayhtvvMGmTZtYu3Ytf/7zn/nb3/7G22+/zcaN
      G1m7di2vv/46r7zySqwvJfaUGBL79u1T77//vlJKqY8//lgtWLBA7d69Wy1cuFAFg0EVCoXU
      eeedp8rKylR+fr6qqqpSjuOoK6+8Uv3jH/9QRUVFqry8XDmOo6699lq1efPmGF/R6HPkyBF1
      6NAhVV9fr1avXq02btyo/v73v6tVq1Ypx3FUQ0ODmjFjhtqzZ48qLi5Wfr9fhUIhVVJSorZt
      26aKioqUz+dTjuOoRYsWqY8++ijWlzTqNDQ0qKVLl6orrrhC/f73v1eBQEDNnz9f7du3Tyml
      1D333KOefPJJtXbtWrVx40allFKbN29W1157rbrjjjvU008/rZRSasuWLerKK69UjuPE7FqG
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
